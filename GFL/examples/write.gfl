INIT_MAX_STR    :: "                                                                                                                                                                                                                                                                  "
true      :: 1
false     :: 0
stdout    :: 1
stdin     :: 0
SYS_write :: 1
SYS_read  :: 0
proc exit(exit_code: i64):void
  = SYSCALL1(exit_code, 60);
proc write(fd: i64, ptr: i64, ptr_len: i64):void
  = SYSCALL3(fd, ptr, ptr_len, SYS_write);   
proc putsf(ptr: *char, ptr_len: i64):void
  = write(stdout, ptr, ptr_len);

proc strlen(str: *char): i64{
  var len: i64 = 0;
  var iter: *char = str;
  while 0 < *iter{
    len  = len  + 1;
    iter = iter + 1;
  }
  return len;
  
}
proc eq_i64(x: i64, y: i64) = ((x < y) + (y < x) == 0);
proc streq(a: *char, b: *char): i64{
  // we'll loop so to avoid destruct the original variable
  var str1: *char	= a;
  var str2: *char	= b;
  var s1: i64		= strlen(str1);
  var s2: i64		= strlen(str2);
  
  if eq_i64(s1, s2)
    return false;
  while 0 < *str1 {
    if eq_i64(*str1, *str2)
      return false;

    str1 = str1 + 1;
    str2 = str2 + 1;    
  }
  return true;
}
proc puts(ptr: *char): void {
  var size: i64 = strlen(ptr);
  putsf(ptr, size);
}

proc putsline(ptr: *char): void {
  var size: i64 = strlen(ptr);
  putsf(ptr, size);
  putsf("\n", 1);
}
MAX_W_SIZE :: 256
proc input(msg: *char=""): *char{
  puts(msg);
  // TODO: make arrays for god sake
  var res: *char = INIT_MAX_STR;
  // 258 bytes lol
  var len: i64 = MAX_W_SIZE;
  SYSCALL3(stdin, res, len, SYS_read);
  // chop the new line at the end
  len = 0;
  var iter: *char = res;
  while 10 < *iter{
    iter = iter + 1;
    len  = len + 1;
  }  

  var last_digit:*char = (:*char)(res + len);
  *last_digit = 0;
  // FIXME: code will not run if: *(:*char)(res + len) = 0;

  return res;
}
proc main(): void {
   var str1: *char = "hello, world\n";
   puts(str1);
   var str2: *char = input("Digite seu nome: " if 1 else "");
   puts("hello, ");
   puts(str2);
   puts(" \\(^- ^)/\n");
}

 
