#import "std/std.gfl"


proc read_some(fd: *i64): *char {
  puts("UNIMPLEMENTED: read_some\n");
  return "";
}
proc write_some(fd: *i64, str: *char): void {
  putsf(fd, str);
}
proc f(x: i64): i64 {
  if x < 2 {return 1;}
  
  // Allocate some space in recursion call
  var r: i64 = f(x - 1);
  return x*r;
}
proc main(): void {
  var program:   *char = "main.gfl";
  var input_fp:  *char = "test.gfl";
  var output_fp: *char = "out.asm";
  var fd:        *i64   = open(input_fp, "a");

  write_some(fd, "Generated by Goffi Lang!\n");
  //write_some(fd, "hello, world\n");
  var readed: *char = read_some(fd);
  puts(readed);

}
